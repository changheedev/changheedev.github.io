<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://changheedev.github.io</id><title>Changhee</title><subtitle>학습한 내용과 경험을 기록하는 개인 개발 블로그 입니다.</subtitle> <updated>2022-02-07T12:30:17+09:00</updated> <author> <name>Changhee</name> <uri>https://changheedev.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://changheedev.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator> <rights> © 2022 Changhee </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>2일간 씨름했던 Connection reset by peer</title><link href="https://changheedev.github.io/posts/2%EC%9D%BC%EA%B0%84_%EC%94%A8%EB%A6%84%ED%96%88%EB%8D%98_Connection_reset_by_peer/" rel="alternate" type="text/html" title="2일간 씨름했던 Connection reset by peer" /><published>2021-06-10T00:00:00+09:00</published> <updated>2021-06-21T22:52:38+09:00</updated> <id>https://changheedev.github.io/posts/2%EC%9D%BC%EA%B0%84_%EC%94%A8%EB%A6%84%ED%96%88%EB%8D%98_Connection_reset_by_peer/</id> <content src="https://changheedev.github.io/posts/2%EC%9D%BC%EA%B0%84_%EC%94%A8%EB%A6%84%ED%96%88%EB%8D%98_Connection_reset_by_peer/" /> <author> <name>Changhee</name> </author> <category term="개발자로 성장하기" /> <summary> 현재 담당하고 있는 사내 툴 개발 프로젝트에서 그동안 잘 동작하던 다운로드 API가 오류가 나기 시작했다. 파일의 크기가 약 200KB 이상만 되면 다운로드가 실패하고, 그 이하의 파일들은 다운로드가 정상적으로 동작했다. 서버 Application에서 찍히는 로그를 보면 IOException: Connection reset by peer 익셉션 또는 IOException: broken pipe 이 발생하고 있었다. org.apache.catalina.connector.ClientAbortException: java.io.IOException: Connection reset by peer at org.apache.catalina.connector.OutputBuffer.realWri... </summary> </entry> <entry><title>리얼서비스 첫경험 반성일기</title><link href="https://changheedev.github.io/posts/%EB%A6%AC%EC%96%BC%EC%84%9C%EB%B9%84%EC%8A%A4_%EC%B2%AB%EA%B2%BD%ED%97%98_%EB%B0%98%EC%84%B1%EC%9D%BC%EA%B8%B0/" rel="alternate" type="text/html" title="리얼서비스 첫경험 반성일기" /><published>2021-06-04T00:00:00+09:00</published> <updated>2021-06-12T21:14:22+09:00</updated> <id>https://changheedev.github.io/posts/%EB%A6%AC%EC%96%BC%EC%84%9C%EB%B9%84%EC%8A%A4_%EC%B2%AB%EA%B2%BD%ED%97%98_%EB%B0%98%EC%84%B1%EC%9D%BC%EA%B8%B0/</id> <content src="https://changheedev.github.io/posts/%EB%A6%AC%EC%96%BC%EC%84%9C%EB%B9%84%EC%8A%A4_%EC%B2%AB%EA%B2%BD%ED%97%98_%EB%B0%98%EC%84%B1%EC%9D%BC%EA%B8%B0/" /> <author> <name>Changhee</name> </author> <category term="개발자로 성장하기" /> <summary> 입사한지 한달이 조금 넘어가는 시점에서 이벤트 대상자들에게 알림을 발송하는 업무를 맡게 되었다. 파일에서 line을 읽어 curl 명령을 실행하는 쉘 스크립트 기본 틀을 리더님께서 구현하여 설명을 해주셨고, 그것을 바탕으로 알림 발송 스크립트를 구현했다. 알림을 발송하는 API를 반복적으로 호출해주면 되기 때문에 복잡한 업무는 아니었지만, 리얼 환경의 실제 유저들을 대상으로 하기때문에 실수가 발생할 경우 CS적인 문제가 발생할 수 있는 업무였다. 되도록 깔끔하게 마무리하기 위해서 스크립트도 꾸준히 개선하고 사전 테스트도 여러번 진행했었는데 아니나 다를까 결국 문제가 발생하고 말았다. 발생한 문제 일부 유저들에게 알림 발송이 실패 알림 발송 실패케이스를 확인하다 유저 ID가 다르게 ... </summary> </entry> <entry><title>한글입력 상태에서 백틱(`) 입력설정</title><link href="https://changheedev.github.io/posts/%ED%95%9C%EA%B8%80%EC%9E%85%EB%A0%A5_%EC%83%81%ED%83%9C%EC%97%90%EC%84%9C_%EB%B0%B1%ED%8B%B1(-)_%EC%9E%85%EB%A0%A5%EC%84%A4%EC%A0%95/" rel="alternate" type="text/html" title="한글입력 상태에서 백틱(`) 입력설정" /><published>2021-05-24T00:00:00+09:00</published> <updated>2021-05-24T00:00:00+09:00</updated> <id>https://changheedev.github.io/posts/%ED%95%9C%EA%B8%80%EC%9E%85%EB%A0%A5_%EC%83%81%ED%83%9C%EC%97%90%EC%84%9C_%EB%B0%B1%ED%8B%B1(-)_%EC%9E%85%EB%A0%A5%EC%84%A4%EC%A0%95/</id> <content src="https://changheedev.github.io/posts/%ED%95%9C%EA%B8%80%EC%9E%85%EB%A0%A5_%EC%83%81%ED%83%9C%EC%97%90%EC%84%9C_%EB%B0%B1%ED%8B%B1(-)_%EC%9E%85%EB%A0%A5%EC%84%A4%EC%A0%95/" /> <author> <name>Changhee</name> </author> <category term="Mac" /> <summary> 마크다운을 사용하다보면 코드를 입력할 때 백틱(`)을 굉장히 자주 사용하게 된다. 그런데 맥에서 한글입력 상태일때 백틱을 입력하면 원(₩) 표시가 입력된다. 한글입력 상태에서도 백틱을 사용하려면 아래와 같이 설정해준다. Library 디렉토리로 이동 $ cd ~/Library KeyBindings 디렉토리 생성 $ mkdir KeyBindings $ cd KeyBindings DefaultkeyBinding.dict 파일 생성 $ touch DefaultkeyBinding.dict 백틱 binding 설정 입력 $ vi DefaultkeyBinding.dict # 아래 내용 입력 { "₩" = ("insertText:", "`"); } 변경사항은 어플리... </summary> </entry> <entry><title>자주 사용하는 IP에 Hostname 등록하기</title><link href="https://changheedev.github.io/posts/%EC%9E%90%EC%A3%BC_%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94_IP%EC%97%90_Hostname_%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="자주 사용하는 IP에 Hostname 등록하기" /><published>2021-05-24T00:00:00+09:00</published> <updated>2021-05-24T00:00:00+09:00</updated> <id>https://changheedev.github.io/posts/%EC%9E%90%EC%A3%BC_%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94_IP%EC%97%90_Hostname_%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0/</id> <content src="https://changheedev.github.io/posts/%EC%9E%90%EC%A3%BC_%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94_IP%EC%97%90_Hostname_%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0/" /> <author> <name>Changhee</name> </author> <category term="Mac" /> <summary> 터미널에서 /etc/hosts를 편집기로 실행한다. $ sudo vi /etc/hosts 다음과 같은 화면이 나오면 localhost 의 내용 밑에 등록하고자 하는 IP와 원하는 호스트이름을 입력한다. # Host Database # # localhost is used to configure the loopback interface # when the system is booting. Do not change this entry. ## 127.0.0.1 localhost 255.255.255.255 broadcasthost ::1 localhost 127.0.0.1 samplehost # 새로 추가된 내용 변경된 내용이 적용되도록 터미널에서 아래... </summary> </entry> <entry><title>UriComponentsBuilder 활용 정리</title><link href="https://changheedev.github.io/posts/UriComponentsBuilder_%ED%99%9C%EC%9A%A9%EC%A0%95%EB%A6%AC/" rel="alternate" type="text/html" title="UriComponentsBuilder 활용 정리" /><published>2021-05-20T00:00:00+09:00</published> <updated>2021-05-20T00:00:00+09:00</updated> <id>https://changheedev.github.io/posts/UriComponentsBuilder_%ED%99%9C%EC%9A%A9%EC%A0%95%EB%A6%AC/</id> <content src="https://changheedev.github.io/posts/UriComponentsBuilder_%ED%99%9C%EC%9A%A9%EC%A0%95%EB%A6%AC/" /> <author> <name>Changhee</name> </author> <category term="Programming" /> <category term="Spring" /> <summary> UriComponentsBuilder 스프링에서 URI를 생성할 때, 편리하게 할 수 있도록 도와주는 클래스. Spring Web 의존성이 필요하고 org.spring.framework.web.util 패키지에 포함되어 있다. 사용법 fromXXX() 메소드를 사용하여 UriComponentsBuilder를 생성한다. path(), queryParam() 등 각 메소드를 이용하여 URI 컴포넌트들을 세팅한다. 빌드하여 UriComponents 인스턴스를 생성한다. 기본 사용예시 UriComponents uriComponents = UriComponentsBuilder .fromHttpUrl("http://example.com") .path("/a... </summary> </entry> </feed>
